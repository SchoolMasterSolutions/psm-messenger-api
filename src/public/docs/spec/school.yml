definitions:
  Address:
    type: object
    required:
      - district
      - region
    properties:
      district:
        type: string
        description: District in which the school is located
      region:
        type: string
        description: Region in which the school is located
        enum: ["east", "west", "central", "north", "south"]
      website:
        type: string
        description: School's website
      email:
        type: string
        description: School's email address

      coordinates:
        type: object
        properties:
          latitude:
            type: number
            description: e.g. 0.3711983
          longitude:
            type: number
            description: e.g. 32.6390483

  School:
    type: object
    required:
      - name
      - _id
      - category
      - curricula
      - rating
      - address
      - signup_status
    properties:
      _id:
        type: string
        description: Unique identifier of the school

      name:
        type: string
        description: Name of the school

      curricula:
        description: School Curricula
        type: array
        items:
          enum:
            - local
            - international

      category:
        description: School category
        type: string
        enum:
          - pre-primary
          - kindergarten
          - primary
          - secondary

      classes:
        type: array
        description: School classes
        items:
          type: object
          properties:
            id:
              type: number
              description: Unique identifier
            name:
              type: string
              description: Class name e.g. S.1, S.2
            streams:
              type: array
              description: Class streams
              items:
                type: string
            level:
              type: object
              properties:
                numeric:
                  type: number
                  description: Numeric representation of the level
                label:
                  type: string
                  enum:
                    - Pre-Primary
                    - Primary
                    - O-Level
                    - A-Level
            class_teacher:
              type: object
              properties:

      houses:
        type: array
        description: Houses or clubs

      address:
        type: object
        description: The school's address
        $ref: "#/definitions/Address"

      signup_status:
        type: boolean
        description: Indicates whether thes school has signup for PSM messenger or not
        default: false

parameters:
  school:
    in: body
    type: object
    required: true
    name: body
    description: School object
    schema:
      $ref: "#/definitions/School"

paths:
  /api/school:
    post:
      tags:
        - Schools
      summary: Add
      description: This allows creation of a new school
      consumes: application/json
      produces: application/json
      parameters:
        - $ref: "#/parameters/school"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/School"
        500:
          description: internal server error

    get:
      tags:
        - Schools
      summary: Search
      description: Searches schools based on a given search criteria
      produces: application/json
      parameters:
        - in: query
          type: string
          name: _id
          schema:
            $ref: "#/definitions/School/properties/_id"

        - in: query
          type: string
          name: name
          schema:
            $ref: "#/definitions/School/properties/name"

        - in: query
          type: string
          name: curriculum
          schema:
            $ref: "#/definitions/School/properties/curricula"

        - in: query
          type: string
          name: signup_status
          schema:
            $ref: "#/definitions/School/properties/signup_status"

        - in: query
          type: string
          name: category
          schema:
            $ref: "#/definitions/School/properties/category"

      responses:
        200:
          description: A list of all schools
          schema:
            type: array
            items:
              $ref: "#/definitions/School"
        404:
          description: No schools found
        500:
          description: internal server error

  /api/school/{_id}:
    put:
      tags:
        - Schools
      summary: Update
      description: Use this endpoint if you want to update a school
      produces: application/json
      parameters:
        - in: path
          required: true
          type: string
          name: _id
          example: 57694bdc-4609-4500-ae91-48ba98ea8ba4
          schema:
            $ref: "#/definitions/School/properties/_id"
        - $ref: "#/parameters/school"

      responses:
        200:
          description: Returns the school that has been updated
          schema:
            $ref: "#/definitions/School"
        404:
          description: School not found
        500:
          description: internal server error

    delete:
      tags:
        - Schools
      summary: Delete
      description: Deletes a school
      produces: application/json
      parameters:
        - in: path
          required: true
          type: string
          name: _id
          example: 57694bdc-4609-4500-ae91-48ba98ea8ba4
          schema:
            $ref: "#/definitions/School/properties/_id"
      responses:
        200:
          description: School deleted successfully
        404:
          description: School not found
        500:
          description: internal server error
