definitions:
  Subscription:
    type: object
    required:
      - category
      - school_id
      - status
      - features
    properties:
      category:
        type: string
        enum: ["school", "parent"]
        description: Specifies whether the subscription is for a school for a parent

      school_id:
        $ref: "#/definitions/School/properties/_id"

      parent_code:
        $ref: "#/definitions/User/properties/_id"

      status:
        type: string
        default: inactive
        enum: ["active", "inactive", trial]

      expires_on:
        type: datetime
        description: Expiration date for the trial subscription

      features:
        type: array
        description: School or parent premium features subscribed for
        items:
          type: string
          enum:
            - Feature One
            - Feature Two
            - Feature Three

      receive_reminders:
        type: boolean
        default: true
        description: Specifies if the user wants to receive reminders about their subscription expiry

      payments:
        type: array
        description: Payments made by the user
        items:
          type: object
          properties:
            date_of_payment:
              type: datetime
              description: Date when the payment was made
            mode_of_payment:
              type: string
              enum:
                - Mobile Money
                - Bank
                - Cash
            amount:
              type: number
              format: double
              description: Amount paid

parameters:
  id:
    in: path
    type: string
    required: true
    name: id
    description: Subscription Id

  subscription:
    in: body
    type: object
    required: true
    name: body
    description: Subscription object
    schema:
      $ref: "#/definitions/Subscription"

paths:
  /api/subscription:
    post:
      tags:
        - Subscriptions
      summary: Add
      description: This allows creation of a new subscription
      consumes: application/json
      produces: application/json
      parameters:
        - $ref: "#/parameters/subscription"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Subscription"
        500:
          description: internal server error

    get:
      tags:
        - Subscriptions
      summary: Search
      description: Searches subscription based on a given search criteria
      produces: application/json
      parameters:
        - $ref: "#/parameters/search"
      responses:
        200:
          description: A list of all subscription
          schema:
            type: array
            items:
              $ref: "#/definitions/Subscription"
        404:
          description: No subscription found
        500:
          description: internal server error

  /api/subscription/{id}:
    put:
      tags:
        - Subscriptions
      summary: Update
      description: Use this endpoint if you want to update a subscription
      produces: application/json
      parameters:
        - $ref: "#/parameters/id"
        - $ref: "#/parameters/subscription"

      responses:
        200:
          description: Returns the subscription that has been updated
          schema:
            $ref: "#/definitions/Subscription"
        404:
          description: Subscription not found
        500:
          description: internal server error

    delete:
      tags:
        - Subscriptions
      summary: Delete
      description: Deletes a subscription
      produces: application/json
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Subscription deleted successfully
        404:
          description: Subscription not found
        500:
          description: internal server error
